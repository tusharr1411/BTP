{"ast":null,"code":"var _jsxFileName = \"/root/blockchain_projects/project_btp/frontend/src/components/starbackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarBackground = () => {\n  _s();\n  const canvasRef = useRef();\n  useEffect(() => {\n    let scene, camera, renderer, starField;\n    const createStarField = () => {\n      const geometry = new THREE.BufferGeometry();\n      const stars = [];\n      for (let i = 0; i < 5000; i++) {\n        const x = (Math.random() - 0.5) * 2000;\n        const y = (Math.random() - 0.5) * 2000;\n        const z = (Math.random() - 0.5) * 2000;\n        stars.push(x, y, z);\n      }\n      geometry.setAttribute('position', new THREE.Float32BufferAttribute(stars, 3));\n      const material = new THREE.PointsMaterial({\n        color: 0xffffff,\n        size: 1,\n        sizeAttenuation: true,\n        transparent: true,\n        opacity: 0.5,\n        // Set the opacity for transparency\n        depthWrite: false\n      });\n      starField = new THREE.Points(geometry, material);\n      scene.add(starField);\n    };\n    const createCamera = () => {\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 100; // Move the camera forward to see the stars clearly\n      return camera;\n    };\n    const init = () => {\n      scene = new THREE.Scene();\n      camera = createCamera();\n      renderer = new THREE.WebGLRenderer({\n        alpha: true\n      }); // Set alpha to true for transparency\n\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setClearColor(0x000000, 0); // Set the clear color to transparent\n      canvasRef.current.appendChild(renderer.domElement);\n      createStarField();\n      animate();\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (starField) {\n        starField.rotation.x -= 0.001;\n        starField.rotation.y -= 0.001;\n      }\n      renderer.render(scene, camera);\n    };\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n    init();\n\n    // Clean-up function\n    return () => {\n      window.removeEventListener('resize');\n      // Perform any necessary clean-up or teardown here\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1 // Set a negative z-index to position behind other content\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(StarBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = StarBackground;\nexport default StarBackground;\nvar _c;\n$RefreshReg$(_c, \"StarBackground\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","StarBackground","_s","canvasRef","scene","camera","renderer","starField","createStarField","geometry","BufferGeometry","stars","i","x","Math","random","y","z","push","setAttribute","Float32BufferAttribute","material","PointsMaterial","color","size","sizeAttenuation","transparent","opacity","depthWrite","Points","add","createCamera","PerspectiveCamera","window","innerWidth","innerHeight","position","init","Scene","WebGLRenderer","alpha","setSize","setClearColor","current","appendChild","domElement","animate","requestAnimationFrame","rotation","render","addEventListener","aspect","updateProjectionMatrix","removeEventListener","ref","style","top","left","width","height","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/blockchain_projects/project_btp/frontend/src/components/starbackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst StarBackground = () => {\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    let scene, camera, renderer, starField;\n\n    const createStarField = () => {\n      const geometry = new THREE.BufferGeometry();\n      const stars = [];\n\n      for (let i = 0; i < 5000; i++) {\n        const x = (Math.random() - 0.5) * 2000;\n        const y = (Math.random() - 0.5) * 2000;\n        const z = (Math.random() - 0.5) * 2000;\n\n        stars.push(x, y, z);\n      }\n\n      geometry.setAttribute('position', new THREE.Float32BufferAttribute(stars, 3));\n\n      const material = new THREE.PointsMaterial({\n        color: 0xffffff,\n        size: 1,\n        sizeAttenuation: true,\n        transparent: true,\n        opacity: 0.5, // Set the opacity for transparency\n        depthWrite: false\n      });\n\n      starField = new THREE.Points(geometry, material);\n      scene.add(starField);\n    };\n\n    const createCamera = () => {\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 100; // Move the camera forward to see the stars clearly\n      return camera;\n    };\n\n    const init = () => {\n      scene = new THREE.Scene();\n      camera = createCamera();\n      renderer = new THREE.WebGLRenderer({ alpha: true }); // Set alpha to true for transparency\n\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.setClearColor(0x000000, 0); // Set the clear color to transparent\n      canvasRef.current.appendChild(renderer.domElement);\n\n      createStarField();\n      animate();\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (starField) {\n        starField.rotation.x -= 0.001;\n        starField.rotation.y -= 0.001;\n      }\n\n      renderer.render(scene, camera);\n    };\n\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    init();\n\n    // Clean-up function\n    return () => {\n      window.removeEventListener('resize');\n      // Perform any necessary clean-up or teardown here\n    };\n  }, []);\n\n  return (\n    <div\n      ref={canvasRef}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1 // Set a negative z-index to position behind other content\n      }}\n    />\n  );\n};\n\nexport default StarBackground;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}