{"ast":null,"code":"var _jsxFileName = \"/root/blockchain_projects/project_btp/frontend/src/components/starbackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarBackground = () => {\n  _s();\n  const canvasRef = useRef();\n  useEffect(() => {\n    let scene, camera, renderer, starField;\n    const createStarField = () => {\n      const geometry = new THREE.BufferGeometry();\n      const stars = [];\n      for (let i = 0; i < 5000; i++) {\n        const x = (Math.random() - 0.5) * 2000;\n        const y = (Math.random() - 0.5) * 2000;\n        const z = (Math.random() - 0.5) * 2000;\n        stars.push(x, y, z);\n      }\n      geometry.setAttribute('position', new THREE.Float32BufferAttribute(stars, 3));\n      const material = new THREE.PointsMaterial({\n        color: 0xffffff,\n        size: 1,\n        sizeAttenuation: true,\n        transparent: true,\n        depthWrite: false\n      });\n      starField = new THREE.Points(geometry, material);\n      scene.add(starField);\n    };\n    const createCamera = () => {\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 1;\n      return camera;\n    };\n    const init = () => {\n      scene = new THREE.Scene();\n      camera = createCamera();\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      canvasRef.current.appendChild(renderer.domElement);\n      createStarField();\n      animate();\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (starField) {\n        starField.rotation.x -= 0.001;\n        starField.rotation.y -= 0.001;\n      }\n      renderer.render(scene, camera);\n    };\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n    init();\n\n    // Clean-up function\n    return () => {\n      window.removeEventListener('resize');\n      // Perform any necessary clean-up or teardown here\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, this);\n};\n_s(StarBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = StarBackground;\nexport default StarBackground;\nvar _c;\n$RefreshReg$(_c, \"StarBackground\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","StarBackground","_s","canvasRef","scene","camera","renderer","starField","createStarField","geometry","BufferGeometry","stars","i","x","Math","random","y","z","push","setAttribute","Float32BufferAttribute","material","PointsMaterial","color","size","sizeAttenuation","transparent","depthWrite","Points","add","createCamera","PerspectiveCamera","window","innerWidth","innerHeight","position","init","Scene","WebGLRenderer","antialias","setSize","current","appendChild","domElement","animate","requestAnimationFrame","rotation","render","addEventListener","aspect","updateProjectionMatrix","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/blockchain_projects/project_btp/frontend/src/components/starbackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\n\nconst StarBackground = () => {\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    let scene, camera, renderer, starField;\n\n    const createStarField = () => {\n      const geometry = new THREE.BufferGeometry();\n      const stars = [];\n\n      for (let i = 0; i < 5000; i++) {\n        const x = (Math.random() - 0.5) * 2000;\n        const y = (Math.random() - 0.5) * 2000;\n        const z = (Math.random() - 0.5) * 2000;\n\n        stars.push(x, y, z);\n      }\n\n      geometry.setAttribute('position', new THREE.Float32BufferAttribute(stars, 3));\n\n      const material = new THREE.PointsMaterial({\n        color: 0xffffff,\n        size: 1,\n        sizeAttenuation: true,\n        transparent: true,\n        depthWrite: false\n      });\n\n      starField = new THREE.Points(geometry, material);\n      scene.add(starField);\n    };\n\n    const createCamera = () => {\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 1;\n      return camera;\n    };\n\n    const init = () => {\n      scene = new THREE.Scene();\n      camera = createCamera();\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      canvasRef.current.appendChild(renderer.domElement);\n\n      createStarField();\n      animate();\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (starField) {\n        starField.rotation.x -= 0.001;\n        starField.rotation.y -= 0.001;\n      }\n\n      renderer.render(scene, camera);\n    };\n\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    init();\n\n    // Clean-up function\n    return () => {\n      window.removeEventListener('resize');\n      // Perform any necessary clean-up or teardown here\n    };\n  }, []);\n\n  return <div ref={canvasRef} />;\n};\n\nexport default StarBackground;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}